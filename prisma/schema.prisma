// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int        @id @default(autoincrement())
  email     String     @unique @db.VarChar(100)
  senha     String     @db.VarChar(100)
  nome      String     @db.VarChar(70)
  cpf       String     @unique @db.VarChar(11)
  carrinhos Carrinho[]

  @@map("usuario")
}

model Estoque {
  id                   Int      @id @unique @default(autoincrement())
  quantidadeDisponivel Int      @map("quantidade_disponivel") @db.Int
  Produto              Produto?

  @@map("estoque")
}

model Foto {
  id        Int     @id @default(autoincrement())
  url       String  @db.VarChar(2048)
  produtoId Int
  produto   Produto @relation(fields: [produtoId], references: [id], onDelete: Cascade)

  @@map("foto")
}

model Carrinho {
  id            Int            @id @default(autoincrement())
  fechadoEm     DateTime?      @map("fechado_em")
  statusAberto  Boolean        @map("status_aberto")
  usuarioId     Int            @map("usuario_id")
  Usuario       Usuario        @relation(fields: [usuarioId], references: [id])
  itensCarrinho ItemCarrinho[]

  @@map("carrinho")
}

model Produto {
  id           Int            @id @unique @default(autoincrement())
  nome         String         @db.VarChar(100)
  descricao    String         @db.VarChar(4000)
  preco        Decimal        @db.Decimal(10, 2)
  categoria    String         @db.VarChar(50)
  fotos        Foto[]
  estoqueId    Int            @unique @map("estoque_id")
  Estoque      Estoque        @relation(fields: [estoqueId], references: [id])
  ItemCarrinho ItemCarrinho[]

  @@map("produto")
}

model ItemCarrinho {
  id         Int      @id @default(autoincrement())
  quantidade Int
  produtoId  Int      @map("produto_id")
  carrinhoId Int      @map("carrinho_id")
  Carrinho   Carrinho @relation(fields: [carrinhoId], references: [id])
  produto    Produto  @relation(fields: [produtoId], references: [id])

  @@map("item_carrinho")
}
